#!/bin/bash
# insta485db
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x
# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi
# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -d "var/uploads" ] 
    then
        echo "Error: database already exists"
        exit 1
    else
        mkdir -p var/uploads
        sqlite3 var/insta485.sqlite3 < sql/schema.sql
        sqlite3 var/insta485.sqlite3 < sql/data.sql
        cp sql/uploads/* var/uploads/
    fi

    ;;
  "destroy")
    echo "Destroyed"
    rm -rf var/insta485.sqlite3 var/uploads
    ;;
  "reset")
    echo "Reset"
    rm -rf var/insta485.sqlite3 var/uploads
    mkdir -p var/uploads
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
    ;;
  "dump")
    echo "dump"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'

    ;;
  "random")
    echo "random"
    SHUF=shuf
    # If shuf is not on this machine, try to use gshuf instead
    if ! type shuf 2> /dev/null; then
      SHUF=gshuf
    fi
    DB_FILENAME=var/insta485.sqlite3
    FILENAMES="3a9d5f71820c6b4e7f8d0a1b2c3e5f607918d2c4.jpg
              f0b2a5c38d1e7946052138b9c7a4d6e5f0219347.jpg
              7a9b0c2d3e4f506178293a4b5c6d7e8f9012345b.jpg
              28f9d0a7b6c543219e8f7d6a5b4c309182e5f7b4.jpg
              7b9a5c830d1f2e49506a2138b4c7d5e6f0923147.jpg
              a9b8c7d6e5f40312569e8a7b6c5d4f3e20918273.jpg"
    for i in `seq 1 100`; do
      # echo $FILENAMES      print string
      # shuf -n1             select one random line from multiline input
      # awk '{$1=$1;print}'  trim leading and trailing whitespace
      # Use '${SHUF}' instead of 'shuf'
      FILENAME=`echo "$FILENAMES" | ${SHUF} -n1 | awk '{$1=$1;print}'`
      OWNER="andyyhy"
      sqlite3 -echo -batch ${DB_FILENAME} "INSERT INTO posts(filename, owner) VALUES('${FILENAME}','${OWNER}');"
    done

    ;;

  *)
    usage
    exit 1
    ;;
esac